@using BassinoLibrary.Helpers
@using BassinoLibrary.Resource
@using Domain.Misc
@using Domain.Providers
@model BassinoLibrary.ViewModels.ProductViewModel

@{
    Layout = "~/Views/Shared/_ModalLayout.cshtml";
    ViewBag.Action = "AddImages";
}

@section Header
{
    @Helpers.ModalHeader(string.Format("{0} {1}", "Agregar","Imagenes al Producto"))
}
<link href="~/Content/Uploader-style.css" type="text/css" rel="stylesheet" />
<script>

    function UploadMultipleFiles() {
        var us=$("#productoId").val();
        // here we will create FormData manually to prevent sending mon image files 
        var dataString = new FormData();
        dataString.append("name", us);
        //var files = document.getElementById("UploadedFiles").files;
        for (var i = 0; i < selectedFiles.length; i++) {
            if (!selectedFiles[i].type.match('image.*')) {
                continue;
            }
            dataString.append("uploadedFiles", selectedFiles[i]);
        }
        $.ajax({
            url: '/Product/UplodMultiple',  //Server script to process data
            type: 'POST',
            xhr: function () {  // Custom XMLHttpRequest
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) { // Check if upload property exists
                    myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload
                }
                return myXhr;
            },
            //Ajax events
            
            success: successHandler,
            error: errorHandler,
            //complete: completeHandler,
            // Form data
            data: dataString,
            //Options to tell jQuery not to process data or worry about content-type.
            cache: false,
            contentType: false,
            processData: false
        });

    }
    var selectedFiles;
    var DataURLFileReader = {
        read: function (file, callback) {
            var reader = new FileReader();
            var fileInfo = {
                name: file.name,
                type: file.type,
                fileContent: null,
                size: function () {
                    var FileSize = 0;
                    if (file.size > 1048576) {
                        FileSize = Math.round(file.size * 100 / 1048576) / 100 + " MB";
                    }
                    else if (file.size > 1024) {
                        FileSize = Math.round(file.size * 100 / 1024) / 100 + " KB";
                    }
                    else {
                        FileSize = file.size + " bytes";
                    }
                    return FileSize;
                }
            };
            if (!file.type.match('image.*')) {
                callback("file type not allowed", fileInfo);
                return;
            }
            reader.onload = function () {
                fileInfo.fileContent = reader.result;
                callback(null, fileInfo);
            };
            reader.onerror = function () {
                callback(reader.error, fileInfo);
            };
            reader.readAsDataURL(file);
        }
    };
    function MultiplefileSelected(evt) {
         evt.stopPropagation();
        evt.preventDefault();
       
        selectedFiles = evt.target.files || evt.dataTransfer.files;
        if (selectedFiles) {
            $('#Files').empty();
            for (var i = 0; i < selectedFiles.length; i++) {
                DataURLFileReader.read(selectedFiles[i], function (err, fileInfo) {
                    if (err != null) {
                        var RowInfo = '<div id="File_' + i + '" class="info"><div class="InfoContainer">' +
                            '<div class="Error">' + err + '</div>' +
                            '<div data-name="FileName" class="info">' + fileInfo.name + '</div>' +
                            '<div data-type="FileType" class="info">' + fileInfo.type + '</div>' +
                            '<div data-size="FileSize" class="info">' + fileInfo.size() + '</div></div><hr/></div>';
                        $('#Files').append(RowInfo);
                    }
                    else {
                        var image = '<img src="' + fileInfo.fileContent + '" class="thumb" title="' + fileInfo.name + '" />';
                        var RowInfo = '<div id="File_' + i + '" class="info"><div class="InfoContainer">' +
                            '<div data_img="Imagecontainer">' + image + '</div>' +
                            '<div data-name="FileName" class="info">' + fileInfo.name + '</div>' +
                            '<div data-type="FileType" class="info">' + fileInfo.type + '</div>' +
                            '<div data-size="FileSize" class="info">' + fileInfo.size() + '</div></div><hr/></div>';
                        $('#Files').append(RowInfo);
                    }
                });
            }
        }
    }
    function singleFileSelected(evt) {
        //var selectedFile = evt.target.files can use this  or select input file element and access it's files object
        var selectedFile = ($("#UploadedFile"))[0].files[0];//FileControl.files[0];
        if (selectedFile) {
            var FileSize = 0;
            var imageType = /image.*/;
            if (selectedFile.size > 1048576) {
                FileSize = Math.round(selectedFile.size * 100 / 1048576) / 100 + " MB";
            }
            else if (selectedFile.size > 1024) {
                FileSize = Math.round(selectedFile.size * 100 / 1024) / 100 + " KB";
            }
            else {
                FileSize = selectedFile.size + " Bytes";
            }

            if (selectedFile.type.match(imageType)) {
                var reader = new FileReader();
                reader.onload = function (e) {

                    $("#Imagecontainer").empty();
                    var dataURL = reader.result;
                    var img = new Image()
                    img.src = dataURL;
                    img.className = "thumb";
                    $("#Imagecontainer").append(img);
                };
                reader.readAsDataURL(selectedFile);
            }
            $("#FileName").text("Name : " + selectedFile.name);
            $("#FileType").text("type : " + selectedFile.type);
            $("#FileSize").text("Size : " + FileSize);
        }
    }

    function UploadFile() {
        // we can create form by passing the form to Constructor of formData obeject
        //or creating it manually using append function  but please note file file name should be same like the action Paramter
        //var dataString = new FormData();
        //dataString.append("UploadedFile", selectedFile);

        var form = $('#FormUpload')[0];
        var dataString = new FormData(form);
        $.ajax({
            url: '/Uploader/Upload',  //Server script to process data
            type: 'POST',
            xhr: function () {  // Custom XMLHttpRequest
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) { // Check if upload property exists
                    //myXhr.upload.onprogress = progressHandlingFunction
                    myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload
                }
                return myXhr;
            },
            //Ajax events
            success: successHandler,
            error: errorHandler,
            complete: completeHandler,
            // Form data
            data: dataString,
            //Options to tell jQuery not to process data or worry about content-type.
            cache: false,
            contentType: false,
            processData: false
        });

    }
</script>

<fieldset>
    <div id="alertDivModalImagenes"></div>
   
    
    <div id="FormContent">
        <form id="FormMultipleUpload" enctype="multipart/form-data" method="post">
            <input type="hidden" name="productoId" id="productoId" value="@ViewBag.productoId">
            <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Agregar Imagenes</span>
                    <input type="file" name="UploadedFiles" id="UploadedFiles" multiple />
                </span>
            <button class="btn btn-primary start" type="button" id="Submit_btn" onclick="UploadMultipleFiles();">
                <i class="glyphicon glyphicon-upload"></i>
                <span>Iniciar Subida</span>
            </button>
            <button class="btn btn-warning cancel" type="button" id="Cancel_btn" data-dismiss="modal" >
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cerrar</span>
            </button>
        </form>
        <div class="progress CustomProgress">
            <div id="FileProgress" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                <span></span>
            </div>
        </div>
        <div id="Files">
        </div>
    </div>
</fieldset>

<div id="createView">
</div>
<script>
    $(document).ready(function () {
        $("#UploadedFiles").change(function (evt) {
            MultiplefileSelected(evt);
        });
        $.blockUI.defaults.overlayCSS = {
            backgroundColor: '#000',
            opacity: 0.6
        };
        $.blockUI.defaults.css = {
            padding: 0,
            margin: 5,
            width: '50%',
            top: '30%',
            left: '25%',
            color: '#000',
            border: '3px solid #aaa',
            backgroundColor: '#fff'
        };
        //$.blockUI({ message: $('#createView') });
        //$('#FormUpload input[name=UploadedFile]').change(function (evt) {
        //    singleFileSelected(evt);
        //});
        //$("#FormUpload button[id=Cancel_btn]").click(function () {
        //    Cancel_btn_handler();
        //});
        //$('#FormUpload button[id=Submit_btn]').click(function () {
        //    UploadFile();
        //});
    });
</script>
@section Footer
{
}
